import Api = require('../api');
import Filters = require('./filters');
import Selects = require('./selects');
import Q = require('q');
declare module Queries {
    class ConnectQuery {
        _client: Api.Client;
        _collection: string;
        _selects: Selects.QuerySelects;
        _filters: Filters.QueryFilter[];
        _groups: string[];
        _timeframe: Api.Timeframe;
        _interval: string;
        _timezone: Api.Timezone;
        _customQueryOptions: any;
        _runningRequests: Array<Api.ClientDeferredQuery>;
        constructor(client: Api.Client, collection: string, selects?: Selects.QuerySelects, filters?: Filters.QueryFilter[], groups?: string[], timeframe?: Api.Timeframe, interval?: string, timezone?: Api.Timezone, customQueryOptions?: any);
        collection(): string;
        select(selects: Selects.QuerySelects): ConnectQuery;
        filter(filterSpecification: any): ConnectQuery;
        groupBy(field: string | string[]): ConnectQuery;
        timeframe(timeframe: Api.Timeframe): ConnectQuery;
        interval(interval: string): ConnectQuery;
        timezone(timezone: Api.Timezone): ConnectQuery;
        custom(options: any): ConnectQuery;
        execute(): Q.IPromise<Api.QueryResults>;
        abort(): void;
        isExecuting(): boolean;
        private _addToRunningQueries(executeQuery);
    }
}
export = Queries;
