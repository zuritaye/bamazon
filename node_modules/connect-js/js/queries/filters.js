var _ = require('underscore');
var Filters;
(function (Filters) {
    var QueryFilter = (function () {
        function QueryFilter(field, operator, value) {
            this.field = field;
            this.operator = operator;
            this.value = value;
        }
        return QueryFilter;
    })();
    Filters.QueryFilter = QueryFilter;
    function queryFilterBuilder(filterValue, field) {
        if (!_.isObject(filterValue)) {
            return [new QueryFilter(field, "eq", filterValue)];
        }
        else if (_.isArray(filterValue)) {
            return [new QueryFilter(field, "in", filterValue)];
        }
        else {
            return _.map(filterValue, function (value, opName) { return new QueryFilter(field, opName, value); });
        }
    }
    Filters.queryFilterBuilder = queryFilterBuilder;
})(Filters || (Filters = {}));
module.exports = Filters;
